---
name: ci
on:
  pull_request:
  push:
    branches:
      - 'release/**'
jobs:
  yamllint:
    name: yamllint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: yaml-lint
        uses: ibiqlik/action-yamllint@v1
        with:
          config_file: .ci/yamllint.yml
          strict: true

  shellcheck:
    name: shellcheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: shellcheck
        uses: fkautz/shell-linter@v1.0.1

  golangci-lint:
    name: golangci-lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.16
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.35

  excludeFmtErrorf:
    name: exclude fmt.Errorf
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Exclude fmt.Errorf
        run: |
          if grep -r --include=*.go --exclude=*.pb.go fmt.Errorf . ; then
           echo "Please use errors.Errorf (or errors.New or errors.Wrap or errors.Wrapf) as appropriate rather than fmt.Errorf"
           exit 1
          fi

  checkgomod:
    name: check go.mod and go.sum
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v1
        with:
          go-version: 1.16
      - run: go mod tidy
      - name: Check for changes in go.mod or go.sum
        run: |
          git diff --name-only --exit-code go.mod || ( echo "Run go tidy" && false )
          git diff --name-only --exit-code go.sum || ( echo "Run go tidy" && false )

  packet:
    name: packet (CNI ${{ matrix.CNI }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        CNI: ["default", "calico"]
    steps:
      - name: Set up /bin permissions   # 1. Set up /bin permissions
        run: |
          sudo chmod -R 777 /bin
      - name: Set up go                 # 2. Set up go
        uses: actions/setup-go@v1
        with:
          go-version: 1.16
      - name: Install cloudtest         # 3. Install cloudtest
        run: |
          go get github.com/networkservicemesh/cloudtest@master
        env:
          GO111MODULE: on
          GOBIN: /bin
      - name: Checkout deployments      # 4. Checkout deployments
        uses: actions/checkout@v2
        with:
          repository: Nordix/nsm-deployments-k8s
          ref: sriov-cap
          path: networkservicemesh/deployments-k8s
      - name: Compute suffix            # 5. Compute suffix for cloudtest input and output paths
        id: suffix
        run: |
          if [[ "${CNI}" == "calico" ]]; then
            echo ::set-output name=val::_calico
          fi
        env:
          CNI: ${{ matrix.CNI }}
      - name: Checkout files            # 6. Checkout files
        uses: actions/checkout@v2
        with:
          path: ${{ github.repository }}
      - name: Run tests with cloudtest  # 7. Run tests with cloudtest
        working-directory: ${{ github.repository }}
        run: |
          if [[ "${CNI}" == "calico" ]]; then
            cloudtest --config=.cloudtest${suffix}.yaml || true
          else
            cloudtest --config=.cloudtest${suffix}.yaml
          fi
        env:
          PACKET_AUTH_TOKEN: ${{ secrets.PACKET_AUTH_TOKEN }}
          PACKET_PROJECT_ID: 383890d0-f5d1-4de1-881a-4d1ede549d18
          KUBERNETES_VERSION: ${{ secrets.NSM_KUBERNETES_VERSION }}
          CNI: ${{ matrix.CNI }}
          suffix: ${{ steps.suffix.outputs.val }}
      - name: Publish test report       # 8. Publish test report
        uses: mikepenz/action-junit-report@v3.0.1
        if: ${{ always() }}
        with:
          report_paths: "**/cloud_test${{ steps.suffix.outputs.val }}/results/junit.xml"
          suite_regex: "Test*"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          check_name: "JUnit Test Report (CNI ${{ matrix.CNI }})"
          annotate_only: true
      - name: Upload logs               # 9. Upload logs
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: logs-${{ github.run_number }}
          path: ${{ github.repository }}/.tests/

  packet-cleanup:
    name: packet cleanup
    runs-on: ubuntu-latest
    needs:
      - packet
    if: ${{ always() }}
    steps:
      - name: Set up /bin permissions
        run: |
          sudo chmod -R 777 /bin
      - uses: actions/setup-go@v1
        with:
          go-version: 1.16
      - name: Clean up packet
        run: |
          go get github.com/networkservicemesh/cloudtest/pkg/providers/packet/packet_cleanup@master
          packet_cleanup -k y -c y
        env:
          GO111MODULE: on
          GOBIN: /bin
          PACKET_AUTH_TOKEN: ${{ secrets.PACKET_AUTH_TOKEN }}
          PACKET_PROJECT_ID: 383890d0-f5d1-4de1-881a-4d1ede549d18
